class hsNumber extends HTMLElement{offset=1;input=null;min=null;max=null;animTimer=null;errorAnimTimer=null;events={decrease:null,increase:null,change:null};template='\n        <div class="hs-number-wrapper">\n            <button class="hs-number-btn" action="minus"> - </button>\n                <input class="hs-number-input" type="number" value="0"></input>\n            <button class="hs-number-btn" action="plus"> + </button>\n        </div>\n    ';connectedCallback(){this.id=this.getAttribute("id"),this.id&&""!==this.id?(this.addTemplate(),this.getAttributes(),this.addEvents()):console.error("[HSH-Number] - Number should have an ID.")}on(t,e){this.events.hasOwnProperty(t)?this.events[t]=e:console.error(`[HSH-Number] - No such event as ${t}!`)}getAttributes(){let t=this.getAttribute("min"),e=this.getAttribute("max");t&&(this.min=t,this.input.setAttribute("min",t),this.input.value=t),e&&(this.max=e,this.input.setAttribute("max",e))}addTemplate(){this.innerHTML="",this.insertAdjacentHTML("beforeend",this.template),this.input=this.querySelector(".hs-number-input")}addEvents(){let t=this,e=this.querySelectorAll(".hs-number-btn");for(let i of e)i.addEventListener("click",(function(e){e.preventDefault();let n=i.getAttribute("action");"minus"==n?t.decrease():"plus"==n&&t.increase(),null!==t.events.change&&t.events.change(parseInt(t.input.value))}),!1);this.input.addEventListener("input",(function(){t.setLength()}),!1),this.input.addEventListener("change",(function(){if(null!==t.min&&null!==t.max){let e=parseInt(t.input.value);e>t.max&&(t.input.value=t.max,t.addErrorAnimation()),e<=t.min&&(t.input.value=t.min,t.addErrorAnimation())}}),!1)}decrease(){let t=parseInt(this.input.value)-this.offset;if(t||(t=0),this.min&&t<this.min)return this.input.value=this.min,void this.addErrorAnimation();this.input.value=t,this.addAnimation(),null!==this.events.decrease&&this.events.decrease(parseInt(this.input.value))}increase(){let t=parseInt(this.input.value)+this.offset;if(t||(t=0),this.max&&t>this.max)return this.input.value=this.max,void this.addErrorAnimation();this.input.value=t,this.addAnimation(),null!==this.events.increase&&this.events.increase(parseInt(this.input.value))}addErrorAnimation(){let t=this;this.input.classList.add("error"),clearTimeout(this.errorAnimTimer),this.errorAnimTimer=setTimeout((function(){t.input.classList.remove("error")}),100)}addAnimation(){let t=this;this.input.classList.add("changed"),clearTimeout(this.animTimer),this.animTimer=setTimeout((function(){t.input.classList.remove("changed")}),100)}setLength(){this.input.style.width=this.input.value.length+"ch"}val(){return parseInt(this.input.value)}numIsValid(t){let e=parseInt(t);return!isNaN(e)||(console.error("[HSH-Number] - Value is not a number!"),!1)}setVal(t,e=!1){this.input.value=t,this.addAnimation(),e&&null!==this.events.change&&this.events.change(parseInt(this.input.value))}val(t,e=!1){if(!this.numIsValid(t))return;let i=parseInt(t);null!==this.min&&null!==this.max?i>=this.min&&i<=this.max?this.setVal(t,e):console.error(`[HSH-Number] - Value is out of bounds. Min: ${this.min} Max: ${this.max}!`):this.setVal(t,e)}setMin(t){this.numIsValid(t)&&(this.setAttribute("min",t),this.getAttributes())}setMax(t){this.numIsValid(t)&&(this.setAttribute("max",t),this.getAttributes())}removeBounds(){this.min=null,this.max=null}}customElements.define("hs-number",hsNumber);